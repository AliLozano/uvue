#!/usr/bin/env node

// ESM modules
require = require('esm')(module);

// Dependencies
const fs = require('fs');
const { TestManager } = require('./utils/TestManager');
const yargv = require('yargs').argv;
const execa = require('execa');

(async () => {
  const tm = new TestManager('packages/tests');
  const [command, name, arg0] = yargv._;

  if (!fs.existsSync('packages/tests/base/src/main.js')) {
    await tm.initBase();
  }

  if (!fs.existsSync(`packages/tests/${name}/src/main.js`)) {
    await tm.create(name);
  }

  switch (command) {
    /**
     * Install fixtures on project
     */
    case 'install:fixtures':
    case 'if':
      await tm.installFixtures(name, `tests/${name}/fixtures`);
      break;

    /**
     * Invoke a Vue CLI plugin on project
     */
    case 'install:invoke':
    case 'ii':
      await tm.invoke(name, arg0);
      break;

    /**
     * Create a full test project
     */
    case 'install':
    case 'i':
      await tm.installFixtures(name, `tests/${name}/fixtures`);
      await tm.invoke(name, arg0);
      break;

    /**
     * Run tests
     */
    case 'test':
    case 't':
      const jest = execa('./node_modules/.bin/jest', ['--config', `tests/${name}/jest.config.js`], {
        stdio: 'inherit',
      });

      jest.on('exit', exitCode => {
        console.log(`Exit code: ${exitCode}`);
        process.exit(exitCode);
      });
      break;
  }
})().catch(err => console.error(err));
